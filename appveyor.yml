image:
  - Previous Visual Studio 2019
  - Visual Studio 2019
  #- Previous Ubuntu
  - Ubuntu

environment:
#  nodejs_version: "14" # For Windows image (Linux uses "stack" property)
  # See if the problem is specific to Node.js version
  matrix:
    - job_name: Default Node.js
      skip_node_install: 1
    - job_name: Node.js 12.x
      nodejs_version: "12"
    - job_name: Node.js 14.x
      nodejs_version: "14"

install:
  # Use the latest matching version of Node.js that's installed
  - cmd: IF NOT DEFINED skip_node_install powershell Install-Product node $env:nodejs_version
  # Add node_modules/.bin to path for convenience
  - cmd: set PATH=node_modules\.bin;%PATH%
  # DEBUG
  - cmd: echo %PATH%
  - node --version
  # Sometimes one of the following `npm` commands fails -- perhaps due to a race condition / timing problem
  # The `ping` command below acts a substitute for "sleep 5s" to see if the problem goes away when a delay is inserted here
  #- cmd: ping -n 4 127.0.0.1
  #- sh: ping -c 4 127.0.0.1
  - cmd: npm --version
  - ps: npm --version
  - npm --version
  - cmd: npm config --help
  - ps: npm config --help
  - npm config --help
  - cmd: npm config set spin false
  - ps: npm config set spin false
  - npm config set spin false

build_script:
  - echo "Skip build"

# Post-install test scripts.
test_script:
  - echo "Skip test"
